<?xml version="1.0" encoding="utf-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" epub:prefix="z3998: http://www.daisy.org/z3998/2012/vocab/structure/, se: https://standardebooks.org/vocab/1.0" xml:lang="en-US">
	<head>
		<title>Preface</title>
		<link href="../css/core.css" rel="stylesheet" type="text/css"/>
		<link href="../css/local.css" rel="stylesheet" type="text/css"/>
	</head>
	<body epub:type="frontmatter">
		<section id="preface" epub:type="chapter">
			<h2 epub:type="title">Preface</h2>
			<blockquote>
				<hr/>
				<p>This preface is copied, though with a more serious tone, from Christophe Grandsire. I did just thank him, but this preface felt like it pushed into the realm of plagiarism so I wanted to give a little extra credit.</p>
			</blockquote>
			<hr/>
			<p>METAFONT is the dark but indispensable brother of TeX, the well known typesetting program written by Donald Ervin Knuth. Where TeX, most often through its son LaTeX, works in the light, putting your words together in beautifully typeset documents, fully justified, with automatically generated tables of contents, and so many other features, METAFONT works in the shadows doing the dirty work of generating the fonts your documents are typeset with, and without which you wouldn’t get anything but empty pages.</p>
			<p>But METAFONT is much more than a blue-collar worker under the orders of Manager TeX! It is a true programming language, as much as TeX or LaTeX and even more so! It is devoted to the generation of entire families of fonts using a single program and judiciously chosen sets of parameters.</p>
			<p>Because of this you aren’t required to only use it in your TeX or LaTeX documents. You <em>can</em> use METAFONT to make fonts for your all your systems⁠—epub files included.</p>
			<p>So let’s go over a bit of history.</p>
			<p>In the late 1970s, a professor of Computer Science at Stanford University named Donald Ervin Knuth was revising the second volume of his multi-volume opus <i epub:type="se:name.publication.book">The Art of Computer Programming</i>. He had received the galleys, which used the new computer based typesetting system and was not happy with the results. The quality was far lower that of the first edition of this second volume. Being a computer scientist, he thought that he ought to be able to do better than that. So he set out to learn about typesetting and type design, figuring he should be complete in about six months.</p>
			<p>If not for the invisible nature of type design and typesetting this is not a bad estimate. I, personally, could imagine him figuring that he could learn everything he needed in four or five months. It is about printing so all the information should be published. Write a program to shove letters together into lines, which is a fairly basic operation to a programmer, and shove lines into a page and follow up by turning bits on and off for ink, also simple enough, shouldn’t take more than another month or two. The idea that so much of it was hidden information only shared among fellow artists was probably a bit of a shock to him.</p>
			<p>After <em>ten years</em>, he had a lot more respect for typesetting and type design, as well as a pair of programs. One program was called TeX and handled typesetting⁠—that is placing letters on the page. The other program was called METAFONT and handled type design. Both programs were released with very open licenses, and while TeX continued to receive variants, like LaTeX, that expanded its capabilities, METAFONT remained quietly behind the scenes and made letter forms without being noticed.</p>
			<p>But METAFONT is a type designer system whose power is wasted by being used only as a helper program for TeX and friends. It is commonly seen as too complicated for the common user. It has been ignored by most type-designers, whether amateurs or professional, despite having proved its qualities when Knuth used it to create the Computer Modern font family, which is not only recognized as one of the best font families for typesetting mathematical and scientific documents but has also served as the base for other font families like Computer Concrete.</p>
			<p>This tutorial is intended to correct this situation, at least for those interested in conlanging. I plan to show that METAFONT is actually nothing to be scared of, and that it is actually an easy-to-learn programming language which is usable by anyone with a basic computer knowledge to create custom fonts.</p>
			<p>After following this tutorial, anyone with no knowledge of font design will be able to create simple fonts that they will be able to include in all their documents. Without type design they may not look as good as Computer Modern, but you will be able to have a custom and constructed script usable by other programs. You will even be able to produce epub files like this one!</p>
			<p>This tutorial is organized into <strong>lessons</strong>. Each lesson is divided into <em>descriptive</em> and <em>imperative</em> parts. The <em>descriptive</em> parts are the meat of the lessons, they introduce and describe the commands and features you need to learn to use METAFONT. The <em>imperative</em> parts appear generally in the form of <strong>exercises</strong>, which involve solving problems using the commands and features you’ve been introduced to. The <strong>solutions</strong> to many of those exercises are available in an Appendix. You are encouraged to try the exercises before checking the solutions, and to check them as a very last resort or, better yet, after you have a working solution. Some exercises are just that, a chance for you to exercise your newly gained abilities and, as such, they don’t have solutions but you should do them anyway.</p>
			<p>A final word before you begin the tutorial⁠—enjoy! Despite the math involved, it can be fun to create fonts with METAFONT!</p>
		</section>
	</body>
</html>
